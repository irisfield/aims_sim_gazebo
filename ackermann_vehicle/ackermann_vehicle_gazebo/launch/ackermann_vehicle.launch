<?xml version="1.0"?>

<!-- ackermann_vehicle.launch

Use Gazebo to simulate a vehicle with Ackermann steering.

Arguments:
    namespace (string, default: ackermann_vehicle)
        Vehicle namespace.
    cmd_timeout (double, default: 0.5)
        Command timeout passed to the ackermann_controller node.
    x (double, default: 0.0)
    y (double, default: 0.0)
    z (double, default: 0.1)
    roll (double, default: 0.0)
    pitch (double, default: 0.0)
    yaw (double, default: 0.0)
  Vehicle pose:
    x, y, and z are measured in meters
    roll, pitch, and yaw are measured in radians

Copyright (c) 2013-2015 Wunderkammer Laboratory

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<launch>
  <!-- vehicle description parameters -->
  <arg name="namespace" default="/"/>
  <arg name="ugv_id" default="car"/>
  <arg name="cmd_timeout" default="0.5"/>

  <!-- initial position of the vehicle pose -->
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <!-- load the robot description -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find ackermann_vehicle_description)/urdf/em_3905.urdf.xacro'"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- spawn the vehicle -->
  <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model ackermann_$(arg ugv_id)
              -gazebo_namespace /$(arg namespace)/gazebo
              -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

  <!-- load the joint controllers, one of these publishes the joint states to joint_states -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="$(find ackermann_vehicle_gazebo)/config/em_3905_joint_ctrlr_params.yaml"/>

  <!-- control the steering, axle, and shock absorber joints -->
  <node name="ackermann_controller" pkg="ackermann_vehicle_gazebo" type="ackermann_controller">
    <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
    <rosparam file="$(find ackermann_vehicle_gazebo)/config/em_3905_ackermann_ctrlr_params.yaml" command="load"/>
  </node>

  <node name="$(arg ugv_id)_transform_broadcaster" type="transform_broadcaster.py" pkg="ackermann_vehicle_gazebo" output="screen">
      <param name="odom_topic" value="$(arg ugv_id)/odom"/>
  </node>

  <node pkg="twist_to_ackermann" name="twist_to_ackermann_node" type="twist_to_ackermann_node"/>

</launch>
